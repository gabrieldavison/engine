{"id":"../node_modules/standardized-audio-context/build/es2019/types/start-rendering-factory.js","dependencies":[{"name":"/home/gabriel/Coding/engine/node_modules/standardized-audio-context/build/es2019/types/start-rendering-factory.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/gabriel/Coding/engine/node_modules/standardized-audio-context/src/types/start-rendering-factory.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/gabriel/Coding/engine/package.json","includedInParent":true,"mtime":1599494793911},{"name":"/home/gabriel/Coding/engine/node_modules/standardized-audio-context/package.json","includedInParent":true,"mtime":1598961532693}],"generated":{"js":""},"sourceMaps":{"js":{"version":3,"file":"start-rendering-factory.js","sourceRoot":"","sources":["../../../src/types/start-rendering-factory.ts"],"names":[],"mappings":"","sourcesContent":["import { TAudioBufferStore } from './audio-buffer-store';\nimport { TCacheTestResultFunction } from './cache-test-result-function';\nimport { TGetAudioNodeRendererFunction } from './get-audio-node-renderer-function';\nimport { TGetUnrenderedAudioWorkletNodesFunction } from './get-unrendered-audio-worklet-nodes-function';\nimport { TNativeAudioBuffer } from './native-audio-buffer';\nimport { TRenderNativeOfflineAudioContextFunction } from './render-native-offline-audio-context-function';\nimport { TStartRenderingFunction } from './start-rendering-function';\nimport { TWrapAudioBufferCopyChannelMethodsFunction } from './wrap-audio-buffer-copy-channel-methods-function';\nimport { TWrapAudioBufferCopyChannelMethodsOutOfBoundsFunction } from './wrap-audio-buffer-copy-channel-methods-out-of-bounds-function';\n\nexport type TStartRenderingFactory = (\n    audioBufferStore: TAudioBufferStore,\n    cacheTestResult: TCacheTestResultFunction,\n    getAudioNodeRenderer: TGetAudioNodeRendererFunction,\n    getUnrenderedAudioWorkletNodes: TGetUnrenderedAudioWorkletNodesFunction,\n    renderNativeOfflineAudioContext: TRenderNativeOfflineAudioContextFunction,\n    testAudioBufferCopyChannelMethodsOutOfBoundsSupport: (nativeAudioBuffer: TNativeAudioBuffer) => boolean,\n    wrapAudioBufferCopyChannelMethods: TWrapAudioBufferCopyChannelMethodsFunction,\n    wrapAudioBufferCopyChannelMethodsOutOfBounds: TWrapAudioBufferCopyChannelMethodsOutOfBoundsFunction\n) => TStartRenderingFunction;\n"]}},"error":null,"hash":"45b5e9bfbe3222a14aac20d7ac27c597","cacheData":{"env":{}}}